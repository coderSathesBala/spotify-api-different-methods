{"ast":null,"code":"var _jsxFileName = \"/home/sathes/Desktop/codingFiles/spotify-api-different-methods/src/components/axios-library.js\",\n    _s = $RefreshSig$();\n\n// axios-library\nimport axios from 'axios';\nimport React from 'react';\nimport SpotifyGetPlaylists from './spotifyGetPlaylists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'f25a526cf53d42c7b794db522c42ab98';\nconst SPOTIFY_AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst REDIRECT_URL_AFTER_LOGIN = 'http://localhost:3000/webapp';\nconst SPACE_DELIMITER = '%20';\nconst SCOPES = ['user-read-currently-playing', 'user-read-playback-state'];\nconst SCOPES_URL_PARAM = SCOPES.join('%20');\n\nconst getReturnedParamsFromSpotifyAuth = hash => {\n  const stringAfterHashtag = hash.substring(1);\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\n  const paramsSplitUp = paramsInUrl.reduce((accumulator, currentValue) => {\n    console.log(currentValue);\n    const [key, value] = currentValue.split('=');\n    accumulator[key] = value;\n    return accumulator;\n  }, {});\n  return paramsSplitUp;\n};\n\nconst PersonList = () => {\n  _s();\n\n  React.useEffect(() => {\n    if (window.location.hash) {\n      const {\n        access_token,\n        expires_in,\n        token_type\n      } = getReturnedParamsFromSpotifyAuth(window.location.hash);\n      localStorage.clear();\n      localStorage.setItem(\"accessToken\", access_token);\n      localStorage.setItem(\"tokenType\", token_type);\n      localStorage.setItem(\"expiresIn\", expires_in);\n    }\n  });\n\n  const handleLogIn = () => {\n    window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog='true`; // window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogIn,\n      children: \"Sign-In With Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ARTIST NAME:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ARTIST PICTURE:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ARTIST ALBUM:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ALBUM PICTURE:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ALBUM TRACKLIST:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DISPLAY ALBUM INFO:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this);\n};\n\n_s(PersonList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PersonList;\nexport default PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["/home/sathes/Desktop/codingFiles/spotify-api-different-methods/src/components/axios-library.js"],"names":["axios","React","SpotifyGetPlaylists","CLIENT_ID","SPOTIFY_AUTHORIZE_ENDPOINT","REDIRECT_URL_AFTER_LOGIN","SPACE_DELIMITER","SCOPES","SCOPES_URL_PARAM","join","getReturnedParamsFromSpotifyAuth","hash","stringAfterHashtag","substring","paramsInUrl","split","paramsSplitUp","reduce","accumulator","currentValue","console","log","key","value","PersonList","useEffect","window","location","access_token","expires_in","token_type","localStorage","clear","setItem","handleLogIn"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,SAAS,GAAG,kCAAlB;AACA,MAAMC,0BAA0B,GAAG,wCAAnC;AACA,MAAMC,wBAAwB,GAAG,8BAAjC;AACA,MAAMC,eAAe,GAAE,KAAvB;AACA,MAAMC,MAAM,GAAG,CAAC,6BAAD,EAAgC,0BAAhC,CAAf;AACA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,IAAP,CAAY,KAAZ,CAAzB;;AAEA,MAAMC,gCAAgC,GAAIC,IAAD,IAAU;AAC/C,QAAMC,kBAAkB,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,CAA3B;AACA,QAAMC,WAAW,GAAGF,kBAAkB,CAACG,KAAnB,CAAyB,GAAzB,CAApB;AACA,QAAMC,aAAa,GAAGF,WAAW,CAACG,MAAZ,CAAmB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACpEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,UAAK,CAACG,GAAD,EAAKC,KAAL,IAAcJ,YAAY,CAACJ,KAAb,CAAmB,GAAnB,CAAnB;AACAG,IAAAA,WAAW,CAACI,GAAD,CAAX,GAAmBC,KAAnB;AACA,WAAOL,WAAP;AACH,GALqB,EAKnB,EALmB,CAAtB;AAMA,SAAOF,aAAP;AACH,CAVD;;AAcA,MAAMQ,UAAU,GAAG,MAAM;AAAA;;AACrBvB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AAClB,QAAGC,MAAM,CAACC,QAAP,CAAgBhB,IAAnB,EAAyB;AACrB,YAAM;AACFiB,QAAAA,YADE;AAEFC,QAAAA,UAFE;AAGFC,QAAAA;AAHE,UAIFpB,gCAAgC,CAACgB,MAAM,CAACC,QAAP,CAAgBhB,IAAjB,CAJpC;AAMAoB,MAAAA,YAAY,CAACC,KAAb;AAEAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCL,YAApC;AACAG,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCH,UAAlC;AACAC,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCJ,UAAlC;AACH;AACJ,GAdD;;AAiBA,QAAMK,WAAW,GAAG,MAAM;AACtBR,IAAAA,MAAM,CAACC,QAAP,GAAmB,GAAEvB,0BAA2B,cAAaD,SAAU,iBAAgBE,wBAAyB,UAASG,gBAAiB,wCAA1I,CADsB,CAEtB;AACH,GAHD;;AAIK,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE0B,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALG,eAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANG,eAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPG,eAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYR,CAlCD;;GAAMV,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["// axios-library\nimport axios from 'axios';\nimport React from 'react';\nimport SpotifyGetPlaylists from './spotifyGetPlaylists';\n\nconst CLIENT_ID = 'f25a526cf53d42c7b794db522c42ab98'\nconst SPOTIFY_AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize'\nconst REDIRECT_URL_AFTER_LOGIN = 'http://localhost:3000/webapp'\nconst SPACE_DELIMITER= '%20'\nconst SCOPES = ['user-read-currently-playing', 'user-read-playback-state']\nconst SCOPES_URL_PARAM = SCOPES.join('%20')\n\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\n    const stringAfterHashtag = hash.substring(1);\n    const paramsInUrl = stringAfterHashtag.split(\"&\")\n    const paramsSplitUp = paramsInUrl.reduce((accumulator, currentValue) => {\n        console.log(currentValue)\n        const[key,value] = currentValue.split('=');\n        accumulator[key] = value;\n        return accumulator;\n    }, {});\n    return paramsSplitUp;\n};\n\n\n\nconst PersonList = () => {\n    React.useEffect(() => {\n        if(window.location.hash) {\n            const {\n                access_token,\n                expires_in,\n                token_type\n            } = getReturnedParamsFromSpotifyAuth(window.location.hash);\n        \n            localStorage.clear();\n\n            localStorage.setItem(\"accessToken\", access_token);\n            localStorage.setItem(\"tokenType\", token_type);\n            localStorage.setItem(\"expiresIn\", expires_in);\n        }\n    });\n\n\n    const handleLogIn = () => {\n        window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog='true`\n        // window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\n    }\n         return(\n             <div>\n                 <button onClick={handleLogIn}\n                 >Sign-In With Spotify</button>\n                 <h1>DISPLAY ARTIST NAME:</h1>\n          <h1>DISPLAY ARTIST PICTURE:</h1>\n          <h1>DISPLAY ARTIST ALBUM:</h1>\n          <h1>DISPLAY ALBUM PICTURE:</h1>\n          <h1>DISPLAY ALBUM TRACKLIST:</h1>\n          <h1>DISPLAY ALBUM INFO:</h1>\n             </div>\n         )\n}\n\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}