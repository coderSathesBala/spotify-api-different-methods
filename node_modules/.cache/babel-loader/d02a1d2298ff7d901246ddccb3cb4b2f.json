{"ast":null,"code":"var _jsxFileName = \"/home/sathes/Desktop/codingFiles/spotify-api-different-methods/src/components/spotifyGetPlaylists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // const PLAYLISTS_ENDPOINT = \"https://api.spotify.com/v1/me/playlists\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PLAYLISTS_ENDPOINT = 'https://api.spotify.com/v1/albums';\n\nconst SpotifyGetPlaylists = () => {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      setToken(localStorage.getItem(\"accessToken\"));\n    }\n  }, []);\n\n  const handleGetPlaylists = () => {\n    axios.get(PLAYLISTS_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetPlaylists,\n      children: \"Get Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data !== null && data !== void 0 && data.items ? data.items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 47\n    }, this)) : null]\n  }, void 0, true);\n};\n\n_s(SpotifyGetPlaylists, \"Jt4HKrL1+N3K4Uvm2fmAKcJsSag=\");\n\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"sources":["/home/sathes/Desktop/codingFiles/spotify-api-different-methods/src/components/spotifyGetPlaylists.js"],"names":["React","useEffect","useState","axios","PLAYLISTS_ENDPOINT","SpotifyGetPlaylists","token","setToken","data","setData","localStorage","getItem","handleGetPlaylists","get","headers","Authorization","then","response","catch","error","console","log","items","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,kBAAkB,GAAG,mCAA3B;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvCJ,MAAAA,QAAQ,CAACG,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BT,IAAAA,KAAK,CACFU,GADH,CACOT,kBADP,EAC2B;AACvBU,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYT;AADpB;AADc,KAD3B,EAMGU,IANH,CAMSC,QAAD,IAAc;AAClBR,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACD,KARH,EASGU,KATH,CASUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXH;AAYD,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEP,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEc,KAAN,GAAcd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBAAU;AAAA,gBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAAzB,CAAd,GAA6D,IAFhE;AAAA,kBADF;AAMD,CA/BD;;GAAMpB,mB;;KAAAA,mB;AAiCN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// const PLAYLISTS_ENDPOINT = \"https://api.spotify.com/v1/me/playlists\";\nconst PLAYLISTS_ENDPOINT = 'https://api.spotify.com/v1/albums'\n\nconst SpotifyGetPlaylists = () => {\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      setToken(localStorage.getItem(\"accessToken\"));\n    }\n  }, []);\n\n  const handleGetPlaylists = () => {\n    axios\n      .get(PLAYLISTS_ENDPOINT, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <button onClick={handleGetPlaylists}>Get Playlists</button>\n      {data?.items ? data.items.map((item) => <p>{item.name}</p>) : null}\n    </>\n  );\n};\n\nexport default SpotifyGetPlaylists;"]},"metadata":{},"sourceType":"module"}